@using DiveO.Services
@model DiveO.ViewModels.PhotoViewModel


@*<div class="row">
    <div class="well col-sm-8 col-sm-offset-2">
        <div id="image-carousel" class="carousel-slide" data-ride="carousel">
            <ol class="carousel-indicators">

                @foreach (var p in Model.Photos)
                {
                    <li data-target="#image-carousel" data-slide-to="@p" class="active"></li>
                    <li data-target="#image-carousel" data-slide-to="@p.Id"></li>
                }  
            </ol>      
    
            <div class="carousel-inner" role="listbox">
                <div class="item">
                    @foreach(var p in Model.Photos)
                    {
                        var img = new ImageProcessor().ByteToImage(p.PhotoBytes);
                        <img src="@img" alt="Dive Image" />
                    }
                </div>
            </div>

            <a class="left carousel-control" href="#image-carousel" role="button" data-slide="prev">
                <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="right carousel-control" href="#image-carousel" role="button" data-slide="next">
                <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>







    
           @foreach (var p in Model.Photos)
            {

                    //var img = new ImageProcessor().ByteToImage(Model.Photos.Find(p => p.Id == id));
                    var img = new ImageProcessor().ByteToImage(p.PhotoBytes);
               
                <img src="@img" height="500" width="500" />
            }
        </div>
    </div>
</div>*@